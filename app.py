import streamlit as st
import whisper
from pydub import AudioSegment
from PIL import Image
import tempfile
import os
from io import BytesIO
from docx import Document
from fpdf import FPDF
from fpdf.errors import FPDFException
import time
import textwrap

# ========== FUN√á√ïES AUXILIARES ==========
def DocumentToBytes(text):
    bio = BytesIO()
    doc = Document()
    for line in text.split("\n"):
        doc.add_paragraph(line)
    doc.save(bio)
    return bio.getvalue()


def PDFToBytes(text):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=11)
    for line in text.split("\n"):
        pdf.multi_cell(0, 8, line)
    raw = pdf.output(dest="S")
    return raw if isinstance(raw, (bytes, bytearray)) else raw.encode("latin-1")

# ========== CONFIGURA√á√ÉO DA P√ÅGINA ==========
st.set_page_config(page_title="GMEX - Transcri√ß√£o", page_icon="üìù", layout="wide")

# ========= CSS CUSTOMIZADO ==========
st.markdown("""
<style>
body { background-color: #f7fafd; }
.header-section { text-align: center; margin-bottom: 2rem; }
.metric-card { background: #fff; padding: 1rem; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
</style>
""", unsafe_allow_html=True)

# ========= HERO SECTION ==========
st.markdown("<div class='header-section'>", unsafe_allow_html=True)
col1, col2, col3 = st.columns([2, 6, 2])
with col2:
    st.image("logo_gmex.png", width=150)
    st.markdown("# üìù GMEX Transcri√ß√£o de Reuni√µes", unsafe_allow_html=True)
    st.markdown("<p>Transforme suas reuni√µes em textos precisos usando IA.</p>", unsafe_allow_html=True)
st.markdown("</div>", unsafe_allow_html=True)

# ========= BARRA LATERAL ==========
st.sidebar.image("logo_gmex.png", width=120)
st.sidebar.markdown("## GMEX - Transcri√ß√£o de √Åudio")
st.sidebar.markdown("Transforme reuni√µes em texto com um clique.")
st.sidebar.markdown("---")
st.sidebar.markdown("**Desenvolvido por:** Alex Medeiros, Consultor GMEX")
st.sidebar.markdown("---")
st.sidebar.markdown("## Sobre a GMEX")
st.sidebar.markdown(
    "üöÄ Acelere seus resultados com consultoria comercial.\n"
    "üí° Estrat√©gias personalizadas e equipes de alta performance.\n"
    "üîó [Conhe√ßa nossos servi√ßos](https://www.gmex.com.br)"
)

# ========= UPLOAD ==========
st.markdown("## üéß Envie seu √°udio")
uploaded_file = st.file_uploader(
    "Suporta: MP3, WAV, M4A, AAC, OGG", type=["mp3", "wav", "m4a", "aac", "ogg"]
)

if 'transcricao' not in st.session_state:
    st.session_state.transcricao = ""

if uploaded_file:
    st.info("‚è≥ Iniciando a transcri√ß√£o...")
    audio = AudioSegment.from_file(uploaded_file)
    duration_ms = len(audio)
    segment_ms = 10 * 60 * 1000  # 10 minutos
    segments = [audio[i:i + segment_ms] for i in range(0, duration_ms, segment_ms)]
    total = len(segments)

    # exibindo m√©tricas iniciais
    m1, m2, m3 = st.columns(3)
    m1.metric("Dura√ß√£o (min)", round(duration_ms/60000, 1))
    m2.metric("Blocos", total)
    m3.metric("Modelo", "Whisper base")

    progress_bar = st.progress(0)
    eta_text = st.empty()
    start_time = time.time()
    model = whisper.load_model("base")
    textos = []

    for idx, seg in enumerate(segments):
        with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp:
            seg.export(tmp.name, format="mp3")
            tmp_path = tmp.name
        try:
            result = model.transcribe(tmp_path)
            textos.append(result["text"])
        except Exception as e:
            st.error(f"‚ùå Erro no bloco {idx+1}: {e}")
        finally:
            os.remove(tmp_path)
        elapsed = time.time() - start_time
        avg = elapsed / (idx + 1)
        remaining = avg * (total - idx - 1)
        eta_text.text(f"Bloco {idx+1}/{total} ‚Äî ETA: {int(remaining)}s")
        progress_bar.progress((idx + 1) / total)

    st.session_state.transcricao = "\n".join(textos)
    st.success("‚úÖ Transcri√ß√£o conclu√≠da")

# ========= RESULTADOS ==========
if st.session_state.transcricao:
    st.subheader("üìÑ Transcri√ß√£o Completa")
    st.text_area("", st.session_state.transcricao, height=300)

    prompt = f"""Abaixo est√° a transcri√ß√£o...
{st.session_state.transcricao}
"""
    st.subheader("üí¨ Prompt para ChatGPT")
    st.text_area("Copie e cole no ChatGPT:", prompt, height=200)

    st.subheader("üì§ Exportar Prompt")
    b1, b2, b3 = st.columns(3)
    b1.download_button("TXT", prompt, "transcricao.txt")
    b2.download_button(
        "DOCX",
        data=BytesIO(DocumentToBytes(prompt)),
        file_name="transcricao.docx",
        mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )
    b3.download_button(
        "PDF",
        data=BytesIO(PDFToBytes(prompt)),
        file_name="transcricao.pdf",
        mime="application/pdf"
    )

# ========= RODAP√â ==========
st.markdown("---")
st.markdown("<p style='text-align:center; color:#555;'>¬© 2025 GMEX - Todos os direitos reservados</p>", unsafe_allow_html=True)
